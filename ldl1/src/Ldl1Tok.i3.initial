
(* -----------------------------------------------------------------------1- *)
(* This file is part of the Scheutz semantic editor.                         *)
(* Copyright 1988..2007, Rodney M. Bates.                                    *)
(* rodney.bates@wichita.edu                                                  *)
(* Licensed under the Gnu Public License, version 2 or later.                *)
(* -----------------------------------------------------------------------2- *)


(* INTERFACE Ldl1Tok, Ldl tokens, mechanically generated by LdlSemantics. 
     Generated on:  2004/06/07 18:55:48 GMT
     Language    Scheutz Language Definition Language Ldl1
     Version     1.0.0.0
     Date        2004/06/07 18:55:47 GMT
     Fingerprint 2baa8dbc27792518
*) 

INTERFACE Ldl1Tok 

; IMPORT LbeStd  

(* Names for string tokens: *) 
; CONST RwVERT_Tok = 24 (* = "VERT" *) 
; CONST RwVARTERM_Tok = 25 (* = "VARTERM" *) 
; CONST RwSTART_Tok = 26 (* = "START" *) 
; CONST RwRIGHT_Tok = 27 (* = "RIGHT" *) 
; CONST RwPRESENT_Tok = 28 (* = "PRESENT" *) 
; CONST RwPREC_Tok = 29 (* = "PREC" *) 
; CONST RwPLURAL_Tok = 30 (* = "PLURAL" *) 
; CONST RwNONPLURAL_Tok = 31 (* = "NONPLURAL" *) 
; CONST RwMEMBER_Tok = 32 (* = "MEMBER" *) 
; CONST RwLDL_Tok = 33 (* = "LDL" *) 
; CONST RwLEFT_Tok = 34 (* = "LEFT" *) 
; CONST RwNONEMPTY_Tok = 35 (* = "NONEMPTY" *) 
; CONST RwNONE_Tok = 36 (* = "NONE" *) 
; CONST RwHORIZ_Tok = 37 (* = "HORIZ" *) 
; CONST RwFILL_Tok = 38 (* = "FILL" *) 
; CONST RwEND_Tok = 39 (* = "END" *) 
; CONST RwBUILD_Tok = 40 (* = "BUILD" *) 
; CONST RwCASE_Tok = 41 (* = "CASE" *) 
; CONST RwOF_Tok = 42 (* = "OF" *) 
; CONST RwELSE_Tok = 43 (* = "ELSE" *) 
; CONST RwABSENT_Tok = 44 (* = "ABSENT" *) 
; CONST RwEMPTY_Tok = 45 (* = "EMPTY" *) 
; CONST RwINDENT_Tok = 46 (* = "INDENT" *) 
; CONST RwINLINE_Tok = 47 (* = "INLINE" *) 
; CONST RwNIL_Tok = 48 (* = "NIL" *) 
; CONST RwVERSION_Tok = 49 (* = "VERSION" *) 
; CONST RwSUFFIXES_Tok = 50 (* = "SUFFIXES" *) 
; CONST CloseParen_Tok = 51 (* = ")" *) 
; CONST OpenParen_Tok = 52 (* = "(" *) 
; CONST At_Tok = 53 (* = "@" *) 
; CONST Bang_Tok = 54 (* = "!" *) 
; CONST Dollar_Tok = 55 (* = "$" *) 
; CONST Circumflex_Tok = 56 (* = "^" *) 
; CONST Plus_Tok = 57 (* = "+" *) 
; CONST Minus_Tok = 58 (* = "-" *) 
; CONST Underscore_Tok = 59 (* = "_" *) 
; CONST Arrow_Tok = 60 (* = "->" *) 
; CONST ArrowStar_Tok = 61 (* = "->*" *) 
; CONST DoubleStroke_Tok = 62 (* = "||" *) 
; CONST Stroke_Tok = 63 (* = "|" *) 
; CONST Equals_Tok = 64 (* = "=" *) 
; CONST CloseBrace_Tok = 65 (* = "}" *) 
; CONST OpenBrace_Tok = 66 (* = "{" *) 
; CONST CloseBracket_Tok = 67 (* = "]" *) 
; CONST OpenBracket_Tok = 68 (* = "[" *) 
; CONST Semicolon_Tok = 69 (* = ";" *) 
; CONST ColonColonEquals_Tok = 70 (* = "::=" *) 
; CONST ColonColonEqualsStar_Tok = 71 (* = "::=*" *) 
; CONST ColonColonEqualsPlus_Tok = 72 (* = "::=+" *) 
; CONST ColonColonEqualsPlusPlus_Tok = 73 (* = "::=++" *) 
; CONST ColonColon_Tok = 74 (* = "::" *) 
; CONST ColonColonPlus_Tok = 75 (* = "::+" *) 
; CONST ColonColonStar_Tok = 76 (* = "::*" *) 
; CONST Dot_Tok = 77 (* = "." *) 
; CONST Comma_Tok = 78 (* = "," *) 
; CONST Colon_Tok = 79 (* = ":" *) 

(* Variable terminal tokens: *) 
; CONST Ident = 80
; CONST String = 81
; CONST Integer = 82

(* Tokens for ModTok nodes for variable terminals: *) 
(* Ident_ModTok = 83 *)
(* String_ModTok = 84 *)
(* Integer_ModTok = 85 *)

(* Abstract Plus Nodes: *) 
; CONST IdentPlusList = 86
; CONST Alternation = 87
; CONST FsCondFmtList = 88

(* Abstract Star Nodes: *) 
; CONST IntStarList = 89
; CONST RuleList = 90
; CONST StringStarList = 91
; CONST AsChildList = 92
; CONST Concatenation = 93
; CONST CsAtomList = 94
; CONST PrecLevels = 95
; CONST FsFixedChildList = 96
; CONST FormatterList = 97

(* Abstract Fixed Nodes: *) 
; CONST LanguageDefinition = 98
; CONST StartRule = 99
; CONST AsVarTermRule = 100
; CONST AsFixedRule = 101
; CONST AsReqdChild = 102
; CONST AsOptChild = 103
; CONST AsStarRule = 104
; CONST AsPlusRule = 105
; CONST AsClassRule = 106
; CONST AsCsClassRule = 107
; CONST CsAltRule = 108
; CONST CsFixedRule = 109
; CONST CsStarRule = 110
; CONST CsPlusRule = 111
; CONST CsPluralRule = 112
; CONST Nil = 113
; CONST PrecRule = 114
; CONST PrecLevelNone = 115
; CONST PrecLevelLeft = 116
; CONST PrecLevelRight = 117
; CONST FsFixedDefaultRule = 118
; CONST FsFixedHorizRule = 119
; CONST FsFixedVertRule = 120
; CONST FsFixedFillRule = 121
; CONST FsInlineRule = 122
; CONST LineBreak = 123
; CONST BolIndenter = 124
; CONST ParentIndenter = 125
; CONST PosIndenter = 126
; CONST BolPlusIndenter = 127
; CONST ParentPlusIndenter = 128
; CONST PosPlusIndenter = 129
; CONST BolMinusIndenter = 130
; CONST ParentMinusIndenter = 131
; CONST PosMinusIndenter = 132
; CONST FsDefaultSubtree = 133
; CONST FsHorizSubtree = 134
; CONST FsVertSubtree = 135
; CONST FsFillSubtree = 136
; CONST FsChildPlain = 137
; CONST DontCare = 138
; CONST FsCondAbsent = 139
; CONST FsCondPresent = 140
; CONST FsCondEmpty = 141
; CONST FsCondNonempty = 142
; CONST FsCondPlural = 143
; CONST FsCondNonplural = 144
; CONST FsCondMember = 145
; CONST FsChildCase = 146
; CONST FsListDefaultRule = 147
; CONST FsListHorizRule = 148
; CONST FsListVertRule = 149
; CONST FsListFillRule = 150

(* Sublist Tokens: *) 
(* IntStarList_%Sublist = 151, Sublist nonterminal for IntStarList *) 
(* RuleList_%Sublist = 152, Sublist nonterminal for RuleList *) 
(* StringStarList_%Sublist = 153, Sublist nonterminal for StringStarList *) 
(* AsChildList_%Sublist = 154, Sublist nonterminal for AsChildList *) 
(* IdentPlusList_%Sublist = 155, Sublist nonterminal for IdentPlusList *) 
(* Alternation_%Sublist = 156, Sublist nonterminal for Alternation *) 
(* Concatenation_%Sublist = 157, Sublist nonterminal for Concatenation *) 
(* CsAtomList_%Sublist = 158, Sublist nonterminal for CsAtomList *) 
(* PrecLevels_%Sublist = 159, Sublist nonterminal for PrecLevels *) 
(* FsFixedChildList_%Sublist = 160, Sublist nonterminal for FsFixedChildList *) 
(* FormatterList_%Sublist = 161, Sublist nonterminal for FormatterList *) 
(* FsCondFmtList_%Sublist = 162, Sublist nonterminal for FsCondFmtList *) 

(* Classes: *) 
; CONST RwVERT = 163 (* Name for "VERT" *) 
; CONST RwVARTERM = 164 (* Name for "VARTERM" *) 
; CONST RwSTART = 165 (* Name for "START" *) 
; CONST RwRIGHT = 166 (* Name for "RIGHT" *) 
; CONST RwPRESENT = 167 (* Name for "PRESENT" *) 
; CONST RwPREC = 168 (* Name for "PREC" *) 
; CONST RwPLURAL = 169 (* Name for "PLURAL" *) 
; CONST RwNONPLURAL = 170 (* Name for "NONPLURAL" *) 
; CONST RwMEMBER = 171 (* Name for "MEMBER" *) 
; CONST RwLDL = 172 (* Name for "LDL" *) 
; CONST RwLEFT = 173 (* Name for "LEFT" *) 
; CONST RwNONEMPTY = 174 (* Name for "NONEMPTY" *) 
; CONST RwNONE = 175 (* Name for "NONE" *) 
; CONST RwHORIZ = 176 (* Name for "HORIZ" *) 
; CONST RwFILL = 177 (* Name for "FILL" *) 
; CONST RwEND = 178 (* Name for "END" *) 
; CONST RwBUILD = 179 (* Name for "BUILD" *) 
; CONST RwCASE = 180 (* Name for "CASE" *) 
; CONST RwOF = 181 (* Name for "OF" *) 
; CONST RwELSE = 182 (* Name for "ELSE" *) 
; CONST RwABSENT = 183 (* Name for "ABSENT" *) 
; CONST RwEMPTY = 184 (* Name for "EMPTY" *) 
; CONST RwINDENT = 185 (* Name for "INDENT" *) 
; CONST RwINLINE = 186 (* Name for "INLINE" *) 
; CONST RwNIL = 187 (* Name for "NIL" *) 
; CONST RwVERSION = 188 (* Name for "VERSION" *) 
; CONST RwSUFFIXES = 189 (* Name for "SUFFIXES" *) 
; CONST CloseParen = 190 (* Name for ")" *) 
; CONST OpenParen = 191 (* Name for "(" *) 
; CONST At = 192 (* Name for "@" *) 
; CONST Bang = 193 (* Name for "!" *) 
; CONST Dollar = 194 (* Name for "$" *) 
; CONST Circumflex = 195 (* Name for "^" *) 
; CONST Plus = 196 (* Name for "+" *) 
; CONST Minus = 197 (* Name for "-" *) 
; CONST Underscore = 198 (* Name for "_" *) 
; CONST Arrow = 199 (* Name for "->" *) 
; CONST ArrowStar = 200 (* Name for "->*" *) 
; CONST DoubleStroke = 201 (* Name for "||" *) 
; CONST Stroke = 202 (* Name for "|" *) 
; CONST Equals = 203 (* Name for "=" *) 
; CONST CloseBrace = 204 (* Name for "}" *) 
; CONST OpenBrace = 205 (* Name for "{" *) 
; CONST CloseBracket = 206 (* Name for "]" *) 
; CONST OpenBracket = 207 (* Name for "[" *) 
; CONST Semicolon = 208 (* Name for ";" *) 
; CONST ColonColonEquals = 209 (* Name for "::=" *) 
; CONST ColonColonEqualsStar = 210 (* Name for "::=*" *) 
; CONST ColonColonEqualsPlus = 211 (* Name for "::=+" *) 
; CONST ColonColonEqualsPlusPlus = 212 (* Name for "::=++" *) 
; CONST ColonColon = 213 (* Name for "::" *) 
; CONST ColonColonPlus = 214 (* Name for "::+" *) 
; CONST ColonColonStar = 215 (* Name for "::*" *) 
; CONST Dot = 216 (* Name for "." *) 
; CONST Comma = 217 (* Name for "," *) 
; CONST Colon = 218 (* Name for ":" *) 
; CONST Rule = 219
; CONST AsRule = 220
; CONST AsChild = 221
; CONST AsClass = 222
; CONST AsListRule = 223
; CONST CsRule = 224
; CONST CsChild = 225
; CONST CsReqdChild = 226
; CONST CsOptChild = 227
; CONST CsListRule = 228
; CONST CsAtom = 229
; CONST PrecLevel = 230
; CONST FsRule = 231
; CONST FsFixedRule = 232
; CONST FsFixedChild = 233
; CONST Formatter = 234
; CONST Indenter = 235
; CONST FsSubtree = 236
; CONST FsSubtreeChild = 237
; CONST FsChild = 238
; CONST IdentOrDontCare = 239
; CONST FsClass = 240
; CONST FsCondFmt = 241
; CONST FsListRule = 242

(* Concrete Alternation Tokens: *) 
; CONST CsChildCs = 243

(* Concrete Plus Tokens: *) 

(* Concrete Plural Tokens: *) 

(* Concrete Star Tokens: *) 

(* Concrete Fixed Tokens: *) 
; CONST CsOptChildCs = 244

(* Limits: *) 
; CONST MinTok = 24
; CONST MaxTok = 244

; PROCEDURE ToText ( Tok : LbeStd . TokTyp ) : TEXT 

; END Ldl1Tok . 

