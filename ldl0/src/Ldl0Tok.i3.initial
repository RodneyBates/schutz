
(* -----------------------------------------------------------------------1- *)
(* This file is part of the Scheutz semantic editor.                         *)
(* Copyright 1988..2007, Rodney M. Bates.                                    *)
(* rodney.bates@wichita.edu                                                  *)
(* Licensed under the Gnu Public License, version 2 or later.                *)
(* -----------------------------------------------------------------------2- *)


(* INTERFACE Ldl0Tok, Ldl tokens, mechanically generated by LdlSemantics. 
     Generated on:  2004/06/07 18:53:28 GMT
     Language    Scheutz Language Definition Language Ldl0
     Version     0.0.0.0
     Date        2004/06/07 18:53:28 GMT
     Fingerprint 82387d0ae0f2cb68
*) 

INTERFACE Ldl0Tok 

; IMPORT LbeStd  

(* Names for string tokens: *) 
; CONST RwVERT_Tok = 24 (* = "VERT" *) 
; CONST RwVARTERM_Tok = 25 (* = "VARTERM" *) 
; CONST RwSTART_Tok = 26 (* = "START" *) 
; CONST RwRIGHT_Tok = 27 (* = "RIGHT" *) 
; CONST RwPRESENT_Tok = 28 (* = "PRESENT" *) 
; CONST RwPREC_Tok = 29 (* = "PREC" *) 
; CONST RwPLURAL_Tok = 30 (* = "PLURAL" *) 
; CONST RwMEMBER_Tok = 31 (* = "MEMBER" *) 
; CONST RwLDL_Tok = 32 (* = "LDL" *) 
; CONST RwLEFT_Tok = 33 (* = "LEFT" *) 
; CONST RwNONEMPTY_Tok = 34 (* = "NONEMPTY" *) 
; CONST RwNONE_Tok = 35 (* = "NONE" *) 
; CONST RwHORIZ_Tok = 36 (* = "HORIZ" *) 
; CONST RwFILL_Tok = 37 (* = "FILL" *) 
; CONST RwEND_Tok = 38 (* = "END" *) 
; CONST CloseParen_Tok = 39 (* = ")" *) 
; CONST OpenParen_Tok = 40 (* = "(" *) 
; CONST At_Tok = 41 (* = "@" *) 
; CONST Bang_Tok = 42 (* = "!" *) 
; CONST Underscore_Tok = 43 (* = "_" *) 
; CONST Arrow_Tok = 44 (* = "->" *) 
; CONST DoubleStroke_Tok = 45 (* = "||" *) 
; CONST Stroke_Tok = 46 (* = "|" *) 
; CONST Equals_Tok = 47 (* = "=" *) 
; CONST CloseBracePlus_Tok = 48 (* = "}+" *) 
; CONST CloseBrace_Tok = 49 (* = "}" *) 
; CONST OpenBrace_Tok = 50 (* = "{" *) 
; CONST CloseBracket_Tok = 51 (* = "]" *) 
; CONST OpenBracket_Tok = 52 (* = "[" *) 
; CONST Semicolon_Tok = 53 (* = ";" *) 
; CONST ColonColonEquals_Tok = 54 (* = "::=" *) 
; CONST ColonEquals_Tok = 55 (* = ":=" *) 
; CONST Dot_Tok = 56 (* = "." *) 
; CONST Colon_Tok = 57 (* = ":" *) 

(* Variable terminal tokens: *) 
; CONST Ident = 58
; CONST String = 59
; CONST Integer = 60

(* Tokens for ModTok nodes for variable terminals: *) 
(* Ident_ModTok = 61 *)
(* String_ModTok = 62 *)
(* Integer_ModTok = 63 *)

(* Abstract Plus Nodes: *) 
; CONST IdentPlusList = 64
; CONST Alternation = 65

(* Abstract Star Nodes: *) 
; CONST RuleList = 66
; CONST AsChildList = 67
; CONST Concatenation = 68
; CONST CsAtomList = 69
; CONST PrecLevels = 70
; CONST FsFixedChildList = 71
; CONST FormatterList = 72

(* Abstract Fixed Nodes: *) 
; CONST LanguageDefinition = 73
; CONST StartRule = 74
; CONST AsVarTermRule = 75
; CONST AsFixedRule = 76
; CONST AsReqdChild = 77
; CONST AsOptChild = 78
; CONST AsStarRule = 79
; CONST AsPlusRule = 80
; CONST AsClassRule = 81
; CONST CsAltRule = 82
; CONST CsFixedRule = 83
; CONST CsStarRule = 84
; CONST CsPlusRule = 85
; CONST PrecRule = 86
; CONST PrecLevelNone = 87
; CONST PrecLevelLeft = 88
; CONST PrecLevelRight = 89
; CONST FsFixedDefaultRule = 90
; CONST FsFixedHorizRule = 91
; CONST FsFixedVertRule = 92
; CONST FsFixedFillRule = 93
; CONST LineBreak = 94
; CONST FsDefaultSubtree = 95
; CONST FsHorizSubtree = 96
; CONST FsVertSubtree = 97
; CONST FsFillSubtree = 98
; CONST FsChildPlain = 99
; CONST DontCare = 100
; CONST FsCondPresent = 101
; CONST FsCondNonempty = 102
; CONST FsCondPlural = 103
; CONST FsCondMember = 104
; CONST FsListDefaultRule = 105
; CONST FsListHorizRule = 106
; CONST FsListVertRule = 107
; CONST FsListFillRule = 108

(* Sublist Tokens: *) 
(* RuleList_%Sublist = 109, Sublist nonterminal for RuleList *) 
(* AsChildList_%Sublist = 110, Sublist nonterminal for AsChildList *) 
(* IdentPlusList_%Sublist = 111, Sublist nonterminal for IdentPlusList *) 
(* Alternation_%Sublist = 112, Sublist nonterminal for Alternation *) 
(* Concatenation_%Sublist = 113, Sublist nonterminal for Concatenation *) 
(* CsAtomList_%Sublist = 114, Sublist nonterminal for CsAtomList *) 
(* PrecLevels_%Sublist = 115, Sublist nonterminal for PrecLevels *) 
(* FsFixedChildList_%Sublist = 116, Sublist nonterminal for FsFixedChildList *) 
(* FormatterList_%Sublist = 117, Sublist nonterminal for FormatterList *) 

(* Classes: *) 
; CONST RwVERT = 118 (* Name for "VERT" *) 
; CONST RwVARTERM = 119 (* Name for "VARTERM" *) 
; CONST RwSTART = 120 (* Name for "START" *) 
; CONST RwRIGHT = 121 (* Name for "RIGHT" *) 
; CONST RwPRESENT = 122 (* Name for "PRESENT" *) 
; CONST RwPREC = 123 (* Name for "PREC" *) 
; CONST RwPLURAL = 124 (* Name for "PLURAL" *) 
; CONST RwMEMBER = 125 (* Name for "MEMBER" *) 
; CONST RwLDL = 126 (* Name for "LDL" *) 
; CONST RwLEFT = 127 (* Name for "LEFT" *) 
; CONST RwNONEMPTY = 128 (* Name for "NONEMPTY" *) 
; CONST RwNONE = 129 (* Name for "NONE" *) 
; CONST RwHORIZ = 130 (* Name for "HORIZ" *) 
; CONST RwFILL = 131 (* Name for "FILL" *) 
; CONST RwEND = 132 (* Name for "END" *) 
; CONST CloseParen = 133 (* Name for ")" *) 
; CONST OpenParen = 134 (* Name for "(" *) 
; CONST At = 135 (* Name for "@" *) 
; CONST Bang = 136 (* Name for "!" *) 
; CONST Underscore = 137 (* Name for "_" *) 
; CONST Arrow = 138 (* Name for "->" *) 
; CONST DoubleStroke = 139 (* Name for "||" *) 
; CONST Stroke = 140 (* Name for "|" *) 
; CONST Equals = 141 (* Name for "=" *) 
; CONST CloseBracePlus = 142 (* Name for "}+" *) 
; CONST CloseBrace = 143 (* Name for "}" *) 
; CONST OpenBrace = 144 (* Name for "{" *) 
; CONST CloseBracket = 145 (* Name for "]" *) 
; CONST OpenBracket = 146 (* Name for "[" *) 
; CONST Semicolon = 147 (* Name for ";" *) 
; CONST ColonColonEquals = 148 (* Name for "::=" *) 
; CONST ColonEquals = 149 (* Name for ":=" *) 
; CONST Dot = 150 (* Name for "." *) 
; CONST Colon = 151 (* Name for ":" *) 
; CONST Rule = 152
; CONST AsRule = 153
; CONST AsChild = 154
; CONST AsListRule = 155
; CONST CsRule = 156
; CONST CsChild = 157
; CONST CsReqdChild = 158
; CONST CsOptChild = 159
; CONST CsListRule = 160
; CONST CsAtom = 161
; CONST PrecLevel = 162
; CONST FsRule = 163
; CONST FsFixedRule = 164
; CONST FsFixedChild = 165
; CONST Formatter = 166
; CONST FsSubtree = 167
; CONST FsChild = 168
; CONST IdentOrDontCare = 169
; CONST FsChildCondFmt = 170
; CONST FsListRule = 171

(* Concrete Alternation Tokens: *) 
; CONST CsChildCs = 172

(* Concrete Plus Tokens: *) 

(* Concrete Plural Tokens: *) 

(* Concrete Star Tokens: *) 

(* Concrete Fixed Tokens: *) 
; CONST CsOptChildCs = 173

(* Limits: *) 
; CONST MinTok = 24
; CONST MaxTok = 173

; PROCEDURE ToText ( Tok : LbeStd . TokTyp ) : TEXT 

; END Ldl0Tok . 

